@page
@model StardewValleyCalendar.Pages.FallModel
@{
    ViewData["Title"] = "Fall";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-12 calendar calendar-background" style="padding: 0px;">
                <h3 class="small-margin">Weekly</h3>
                <div style="display:block;">
                    @foreach (var day in Model.DaysOfTheWeek)
                    {
                    <div class="week-day">
                        <b class="small-margin">@day.Name</b>
                        @if (day.ClosedStores.Any())
                        {
                            @foreach (var store in day.ClosedStores)
                            {
                                <p class="small-margin"><a href="@store.URL" target="_blank">@store.Text</a> Closed</p>
                            }
                        }
                        @if (day.ClosedStoresAfterCommunityCenter.Any())
                        {
                            @foreach (var store in day.ClosedStoresAfterCommunityCenter)
                            {
                                <p class="small-margin"><a href="@store.URL" target="_blank">@store.Text</a> Closed after Community Center restored</p>
                            }
                        }
                        @if (day.ClosedStoresOnSunnyDays.Any())
                        {
                            @foreach (var store in day.ClosedStoresOnSunnyDays)
                            {
                                <p class="small-margin"><a href="@store.URL" target="_blank">@store.Text</a> Closed if Sunny</p>
                            }
                        }
                        @if (day.EarlyStoreClosures.Any())
                        {
                            @foreach (var store in day.EarlyStoreClosures)
                            {
                                <p class="small-margin">
                                    <a href="@store.Item1.URL" target="_blank">@store.Item1.Text</a> closes at @store.Item2
                                </p>
                            }
                        }
                        @if (day.TravelingCartOpen)
                        {
                            <p class="small-margin">
                                <a href="@Model.TravelingCart.URL" target="_blank">@Model.TravelingCart.Text</a>
                                available
                            </p>
                        }
                        @if (day.QueenOfSauceRerun)
                        {
                            <p class="small-margin">
                                <a href="https://stardewvalleywiki.com/The_Queen_of_Sauce" target="_blank">Queen of Sauce</a> rerun
                            </p>
                        }
                        @if (day.QueenOfSauceNewRecipe)
                        {
                            <p class="small-margin">
                                <a href="https://stardewvalleywiki.com/The_Queen_of_Sauce" target="_blank">Queen of Sauce</a> new recipe
                            </p>
                        }
                    </div>
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 calendar calendar-background">
                <div class="row">
                    <div class="col-md-4">
                        <a asp-page="Spring"><h3 class="calendar-title pull-left">Spring</h3></a>
                        <a asp-page="Summer"><h3 class="calendar-title pull-left">Summer</h3></a>
                        <h3 class="calendar-title pull-left">Fall</h3>
                        <a asp-page="Winter"><h3 class="calendar-title pull-left">Winter</h3></a>
                    </div>
                    <div class="col-md-4"></div>
                    <div class="col-md-2"><h4 class="pull-right">Crop Growth Speed:</h4></div>
                    <div class="col-md-1">
                        <select id="speedDropdown" class="pull-right form-control">
                            <option>0%</option>
                            <option>10%</option>
                            <option>20%</option>
                            <option>25%</option>
                            <option>35%</option>
                        </select>
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-info pull-right" onclick="filterGrowSpeed();">Filter</button>
                    </div>
                </div>
                <div class="clearfix"></div>
                @foreach (var day in Model.Days)
                {
                    <div class="calendar-day">
                        <h3 class="pull-right small-margin">@day</h3>
                        @if (Model.CalendarDays.Any(x => x.DayOfMonth == day))
                        {
                            var dayInfo = Model.CalendarDays.First(x => x.DayOfMonth == day);

                            if (dayInfo.Festival != null)
                            {
                                <div>
                                    <img src="~/images/Calendar_Flag_Anim.gif" class="small-margin" />
                                    <a href="@dayInfo.Festival.URL" target="_blank">@dayInfo.Festival.Text</a>
                                </div>
                            }
                            if (dayInfo.Birthday != null)
                            {
                                <p class="small-margin">
                                    <img src="@dayInfo.Birthday.IconURL" />
                                    <a href="@dayInfo.Birthday.Link.URL" target="_blank">@dayInfo.Birthday.Link.Text</a>'s Birthday
                                </p>
                            }

                            if (dayInfo.Notes.Any())
                            {
                                @foreach (var note in dayInfo.Notes)
                                {
                                    <b class="no-margin text-warning">@note</b>
                                }
                            }

                            if (dayInfo.FirstDayToPlant.Any(x => !x.Seasons.Any(y => y == Model.PreviousSeason)) 
                                && (Request.Query["speed"] == "0%" || String.IsNullOrEmpty(Request.Query["speed"])))
                            {
                                var crops = dayInfo.FirstDayToPlant
                                    .Where(x => !x.Seasons.Any(y => y == Model.PreviousSeason))
                                    .Select(x => x.Link.Text);
                                <p class="no-margin text-success"
                                   title="Plant these crops on of before today for an optimal number of harvests if not using Speed Gro OR Agriculturalist">
                                    0%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.FirstDayToPlantTen.Any(x => !x.Seasons.Any(y => y == Model.PreviousSeason)) 
                                && Request.Query["speed"] == "10%")
                            {
                                var crops = dayInfo.FirstDayToPlantTen
                                    .Where(x => !x.Seasons.Any(y => y == Model.PreviousSeason))
                                    .Select(x => x.Link.Text);
                                <p class="no-margin text-success"
                                   title="Plant these crops on of before today for an optimal number of harvests if using Speed Gro OR Agriculturalist">
                                    10%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.FirstDayToPlantTwenty.Any(x => !x.Seasons.Any(y => y == Model.PreviousSeason)) 
                                && Request.Query["speed"] == "20%")
                            {
                                var crops = dayInfo.FirstDayToPlantTwenty
                                    .Where(x => !x.Seasons.Any(y => y == Model.PreviousSeason))
                                    .Select(x => x.Link.Text);
                                <p class="no-margin text-success"
                                   title="Plant these crops on of before today for an optimal number of harvests if using Speed Gro and Agriculturalist">
                                    20%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.FirstDayToPlantTwentyFive.Any(x => !x.Seasons.Any(y => y == Model.PreviousSeason)) 
                                && Request.Query["speed"] == "25%")
                            {
                                var crops = dayInfo.FirstDayToPlantTwentyFive
                                    .Where(x => !x.Seasons.Any(y => y == Model.PreviousSeason))
                                    .Select(x => x.Link.Text);
                                <p class="no-margin text-success"
                                   title="Plant these crops on of before today for an optimal number of harvests if using Deluxe Speed Gro">
                                    25%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.FirstDayToPlantThirtyFive.Any(x => !x.Seasons.Any(y => y == Model.PreviousSeason)) 
                                && Request.Query["speed"] == "35%")
                            {
                                var crops = dayInfo.FirstDayToPlantThirtyFive
                                    .Where(x => !x.Seasons.Any(y => y == Model.PreviousSeason))
                                    .Select(x => x.Link.Text);
                                <p class="no-margin text-success"
                                   title="Plant these crops on of before today for an optimal number of harvests if using Deluxe Speed Gro and Agriculturalist">
                                    35%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.LastDayToPlant.Any() && (Request.Query["speed"] == "0%" || String.IsNullOrEmpty(Request.Query["speed"])))
                            {
                                var crops = dayInfo.LastDayToPlant.Select(x => x.Link.Text);
                                <p class="no-margin text-danger"
                                   title="Last chance for a harvest if not using Speed Gro OR Agriculturalist">
                                    0%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.LastDayToPlantTen.Any() && Request.Query["speed"] == "10%")
                            {
                                var crops = dayInfo.LastDayToPlantTen.Select(x => x.Link.Text);
                                <p class="no-margin text-danger"
                                   title="Last chance for a harvest if using Speed Gro OR Agriculturalist">
                                    10%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.LastDayToPlantTwenty.Any() && Request.Query["speed"] == "20%")
                            {
                                var crops = dayInfo.LastDayToPlantTwenty.Select(x => x.Link.Text);
                                <p class="no-margin text-danger"
                                   title="Last chance for a harvest if using Speed Gro and Agriculturalist">
                                    20%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.LastDayToPlantTwentyFive.Any() && Request.Query["speed"] == "25%")
                            {
                                var crops = dayInfo.LastDayToPlantTwentyFive.Select(x => x.Link.Text);
                                <p class="no-margin text-danger"
                                   title="Last chance for a harvest if using Deluxe Speed Gro">
                                    25%: @String.Join(", ", crops)
                                </p>
                            }

                            if (dayInfo.LastDayToPlantThirtyFive.Any() && Request.Query["speed"] == "35%")
                            {
                                var crops = dayInfo.LastDayToPlantThirtyFive.Select(x => x.Link.Text);
                                <p class="no-margin text-danger"
                                   title="Last chance for a harvest if using Deluxe Speed Gro and Agriculturalist">
                                    35%: @String.Join(", ", crops)
                                </p>
                            }
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-2 calendar-background">
        <h3>Daily</h3>
        @foreach (var time in Model.TimesOfDay)
        {
            <div class="time-of-day">
                <b>@time.Time</b>
                @if (time.StoresOpeningAtTime.Any())
                {
                    @foreach (var store in time.StoresOpeningAtTime)
                    {
                        <p class="no-margin">
                            <a href="@store.URL" target="_blank">@store.Text</a>
                            <b class="opens">open</b>
                        </p>
                    }
                }
                @if (time.StoresClosingAtTime.Any())
                {
                    @foreach (var store in time.StoresClosingAtTime)
                    {
                        <p class="no-margin">
                            <a href="@store.URL" target="_blank">@store.Text</a>
                            <b class="closes">closed</b>
                        </p>
                    }
                }
            </div>
        }
    </div>
    <div class="col-md-1"></div>
</div>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10 calendar-background">
        <table class="table">
            <thead>
                <tr>
                    <th>Crop</th>
                    <th>Seed Price</th>
                    <th>Sell Price</th>
                    <th>Regrows?</th>
                    <th>Harvests:</th>
                    <th>10%:</th>
                    <th>20%:</th>
                    <th>25%:</th>
                    <th>35%:</th>
                    <th>Gold per day:</th>
                    <th>10%:</th>
                    <th>20%:</th>
                    <th>25%:</th>
                    <th>35%:</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var crop in Model.CropsInSeason)
                {
                    <tr>
                        <td>@crop.Link.Text</td>
                        <td>@crop.SeedPrice</td>
                        <td>@crop.SellPrice</td>
                        @if (crop.MultipleHarvests)
                        {
                            <td>Yes</td>

                        }
                        else
                        {
                            <td>No</td>
                        }
                        <td>@crop.CalculatedValues.MaxHarvests.Normal</td>
                        <td>@crop.CalculatedValues.MaxHarvests.SpeedGroOrAgriculturalist</td>
                        <td>@crop.CalculatedValues.MaxHarvests.SpeedGroAndAgriculturalist</td>
                        <td>@crop.CalculatedValues.MaxHarvests.Deluxe</td>
                        <td>@crop.CalculatedValues.MaxHarvests.DeluxeAndAgriculturalist</td>
                        <td>@Math.Round(crop.CalculatedValues.GoldPerDay.Normal, 2)</td>
                        <td>@Math.Round(crop.CalculatedValues.GoldPerDay.SpeedGroOrAgriculturalist, 2)</td>
                        <td>@Math.Round(crop.CalculatedValues.GoldPerDay.SpeedGroAndAgriculturalist, 2)</td>
                        <td>@Math.Round(crop.CalculatedValues.GoldPerDay.Deluxe, 2)</td>
                        <td>@Math.Round(crop.CalculatedValues.GoldPerDay.DeluxeAndAgriculturalist, 2)</td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <h4>Don't Forget:</h4>
            <ul>
                <li><a href="@Model.SeasonalForagingBundle.Link.URL" target="_blank">@Model.SeasonalForagingBundle.Link.Text</a></li>
                @foreach (var reminder in Model.Reminders)
                {
                    <li>@reminder.ItemDescription needed for <a href="@reminder.Bundle.Link.URL" target="_blank">@reminder.Bundle.Link.Text</a></li>
                }
            </ul>
        </div>
    </div>
    <div class="col-md-1"></div>
</div>
<script>
    function filterGrowSpeed() {
        var speedDropdown = document.getElementById('speedDropdown').value;
        var pathWithoutQueryString = window.location.href.substr(0, window.location.href.indexOf('?'));
        window.location.href = pathWithoutQueryString + "?speed=" + speedDropdown;
    }
</script>
